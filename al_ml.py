# -*- coding: utf-8 -*-
"""AL/ML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WNmokSJ8vf-XV6swX2HOqdPn5TP4OVTb
"""

import warnings
warnings.filterwarnings('ignore')

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

data = pd.read_csv("https://raw.githubusercontent.com/ingledarshan/AIML-B2/main/data.csv")

data.head( )

data.info()

data['Unnamed: 32']

data= data.drop("Unnamed: 32",axis=1)

data.head()

data.drop('id',axis=1,inplace=True)

data.columns

type(data.columns)

l = list(data.columns)
print(l)

features_mean = l[1:11]
features_se = l[11:21]
features_worst = l[21:]

print(features_mean)

features_se

print(features_worst)

data.head(2)

data['diagnosis'].unique()

sns.countplot(data['diagnosis'], label = "Count",);

data['diagnosis'].value_counts()

data.shape

data.describe()

len(data.columns)

corr = data.corr()
corr

corr.shape

plt.figure(figsize = (8,8))
  sns.heatmap(corr)

data.head()

data['diagnosis']=data['diagnosis'].map({'M':1 , 'B':0})

data.head()

data['diagnosis'].unique()

X = data.drop('diagnosis',axis=1)
X.head()

Y = data['diagnosis']
Y.head()

from sklearn.model_selection import train_test_split
X_train , X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.3)

data.shape

X_train.shape

X_test.shape

Y_train.shape

Y_test.shape

X_train.head(1)

from sklearn.preprocessing import StandardScaler
ss = StandardScaler()
X_train=ss.fit_transform(X_train)
X_test = ss.transform(X_test)

X_train

from sklearn.linear_model import LogisticRegression
lr = LogisticRegression()
lr.fit(X_train , Y_train)

Y_pred = lr.predict(X_test)

Y_pred

Y_test

from sklearn.metrics import accuracy_score
print(accuracy_score(Y_test , Y_pred))

lr_acc = accuracy_score(Y_test,Y_pred)
print(lr_acc)

results = pd.DataFrame()
results

tempResults = pd.DataFrame({'Algorithm':['Logistic Regression Method'],'Accuracy':[lr_acc]})
results = pd.concat([results,tempResults])
results = results[['Algorithm','Accuracy']]
results